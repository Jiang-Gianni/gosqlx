// Code generated by qtc from "connection.html". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line views/connection.html:1
package views

//line views/connection.html:1
import "github.com/Jiang-Gianni/gosqlx/db"

//line views/connection.html:3
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/connection.html:3
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/connection.html:3
func streamconnectionCard(qw422016 *qt422016.Writer, conn db.Connection, rdmsList []db.Rdm, actions string) {
//line views/connection.html:3
	qw422016.N().S(`
<article class="m-5 p-5 connection" `)
//line views/connection.html:4
	if conn.ID != 0 {
//line views/connection.html:4
		qw422016.N().S(`hx-post="connection/`)
//line views/connection.html:4
		qw422016.E().V(conn.ID)
//line views/connection.html:4
		qw422016.N().S(`"
    hx-include="closest .connection" hx-swap="outerHTML" hx-trigger="change" `)
//line views/connection.html:5
	}
//line views/connection.html:5
	qw422016.N().S(`>

    <div class="flex flex-row">

        <select name="id_rdms">
            `)
//line views/connection.html:10
	for _, rdms := range rdmsList {
//line views/connection.html:10
		qw422016.N().S(`
            <option value="`)
//line views/connection.html:11
		qw422016.E().V(rdms.ID)
//line views/connection.html:11
		qw422016.N().S(`" `)
//line views/connection.html:11
		if rdms.ID == conn.IDRdms {
//line views/connection.html:11
			qw422016.N().S(`selected`)
//line views/connection.html:11
		}
//line views/connection.html:11
		qw422016.N().S(`>`)
//line views/connection.html:11
		qw422016.E().S(rdms.System)
//line views/connection.html:11
		qw422016.N().S(`</option>
            `)
//line views/connection.html:12
	}
//line views/connection.html:12
	qw422016.N().S(`
        </select>

        <label class="m-3 text-center">
            <input type="checkbox" name="ssl" role="switch" `)
//line views/connection.html:16
	if conn.Ssl.Bool {
//line views/connection.html:16
		qw422016.N().S(`checked`)
//line views/connection.html:16
	}
//line views/connection.html:16
	qw422016.N().S(`>
            SSL
        </label>

    </div>

    <div>
        <input type="text" name="name" placeholder="Name" value="`)
//line views/connection.html:23
	qw422016.E().S(conn.Name)
//line views/connection.html:23
	qw422016.N().S(`" />
    </div>

    <div>
        <input type="text" name="host" placeholder="Host" value="`)
//line views/connection.html:27
	qw422016.E().S(conn.Host)
//line views/connection.html:27
	qw422016.N().S(`" />
    </div>

    <div class="flex flex-row justify-center gap-7">
        <div>
            <input type="number" name="port" placeholder="Port"
                value="`)
//line views/connection.html:33
	if conn.Port != 0 {
//line views/connection.html:33
		qw422016.E().V(conn.Port)
//line views/connection.html:33
	}
//line views/connection.html:33
	qw422016.N().S(`" />
        </div>
        <div>
            <input type="text" name="datasource" placeholder="Datasource" value="`)
//line views/connection.html:36
	qw422016.E().S(conn.Datasource)
//line views/connection.html:36
	qw422016.N().S(`" />
        </div>
    </div>

    <div class="flex flex-row justify-center gap-7">
        <div>
            <input type="text" name="user" placeholder="User" value="`)
//line views/connection.html:42
	qw422016.E().S(conn.User)
//line views/connection.html:42
	qw422016.N().S(`" />
        </div>

        <div>
            <input type="password" name="password" placeholder="Password" value="`)
//line views/connection.html:46
	qw422016.E().S(conn.Password)
//line views/connection.html:46
	qw422016.N().S(`" />
        </div>
    </div>

    <div class="flex p-4 justify-center gap-7">

        `)
//line views/connection.html:52
	qw422016.N().S(actions)
//line views/connection.html:52
	qw422016.N().S(`

    </div>


</article>
`)
//line views/connection.html:58
}

//line views/connection.html:58
func writeconnectionCard(qq422016 qtio422016.Writer, conn db.Connection, rdmsList []db.Rdm, actions string) {
//line views/connection.html:58
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/connection.html:58
	streamconnectionCard(qw422016, conn, rdmsList, actions)
//line views/connection.html:58
	qt422016.ReleaseWriter(qw422016)
//line views/connection.html:58
}

//line views/connection.html:58
func connectionCard(conn db.Connection, rdmsList []db.Rdm, actions string) string {
//line views/connection.html:58
	qb422016 := qt422016.AcquireByteBuffer()
//line views/connection.html:58
	writeconnectionCard(qb422016, conn, rdmsList, actions)
//line views/connection.html:58
	qs422016 := string(qb422016.B)
//line views/connection.html:58
	qt422016.ReleaseByteBuffer(qb422016)
//line views/connection.html:58
	return qs422016
//line views/connection.html:58
}

//line views/connection.html:62
func streammodifyConnectionActions(qw422016 *qt422016.Writer, conn db.Connection) {
//line views/connection.html:62
	qw422016.N().S(`
<div>
    <a href="database/`)
//line views/connection.html:64
	qw422016.E().V(conn.ID)
//line views/connection.html:64
	qw422016.N().S(`" target="_blank">
        <button>Open</button>
    </a>
</div>

<div hx-delete="connection/`)
//line views/connection.html:69
	qw422016.E().V(conn.ID)
//line views/connection.html:69
	qw422016.N().S(`" hx-target="closest .connection" hx-swap="outerHTML">
    <button>Delete</button>
</div>
`)
//line views/connection.html:72
}

//line views/connection.html:72
func writemodifyConnectionActions(qq422016 qtio422016.Writer, conn db.Connection) {
//line views/connection.html:72
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/connection.html:72
	streammodifyConnectionActions(qw422016, conn)
//line views/connection.html:72
	qt422016.ReleaseWriter(qw422016)
//line views/connection.html:72
}

//line views/connection.html:72
func modifyConnectionActions(conn db.Connection) string {
//line views/connection.html:72
	qb422016 := qt422016.AcquireByteBuffer()
//line views/connection.html:72
	writemodifyConnectionActions(qb422016, conn)
//line views/connection.html:72
	qs422016 := string(qb422016.B)
//line views/connection.html:72
	qt422016.ReleaseByteBuffer(qb422016)
//line views/connection.html:72
	return qs422016
//line views/connection.html:72
}

//line views/connection.html:76
func streamnewConnectionActions(qw422016 *qt422016.Writer) {
//line views/connection.html:76
	qw422016.N().S(`
<div hx-post="connection" hx-include="closest .connection" hx-target="#connection-list" hx-swap="beforeend">
    <button>Add</button>
</div>
`)
//line views/connection.html:80
}

//line views/connection.html:80
func writenewConnectionActions(qq422016 qtio422016.Writer) {
//line views/connection.html:80
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/connection.html:80
	streamnewConnectionActions(qw422016)
//line views/connection.html:80
	qt422016.ReleaseWriter(qw422016)
//line views/connection.html:80
}

//line views/connection.html:80
func newConnectionActions() string {
//line views/connection.html:80
	qb422016 := qt422016.AcquireByteBuffer()
//line views/connection.html:80
	writenewConnectionActions(qb422016)
//line views/connection.html:80
	qs422016 := string(qb422016.B)
//line views/connection.html:80
	qt422016.ReleaseByteBuffer(qb422016)
//line views/connection.html:80
	return qs422016
//line views/connection.html:80
}

//line views/connection.html:84
func StreamModifyConnection(qw422016 *qt422016.Writer, conn db.Connection, rdms []db.Rdm) {
//line views/connection.html:84
	qw422016.N().S(`
`)
//line views/connection.html:85
	qw422016.N().S(connectionCard(conn, rdms, modifyConnectionActions(conn)))
//line views/connection.html:85
	qw422016.N().S(`
`)
//line views/connection.html:86
}

//line views/connection.html:86
func WriteModifyConnection(qq422016 qtio422016.Writer, conn db.Connection, rdms []db.Rdm) {
//line views/connection.html:86
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/connection.html:86
	StreamModifyConnection(qw422016, conn, rdms)
//line views/connection.html:86
	qt422016.ReleaseWriter(qw422016)
//line views/connection.html:86
}

//line views/connection.html:86
func ModifyConnection(conn db.Connection, rdms []db.Rdm) string {
//line views/connection.html:86
	qb422016 := qt422016.AcquireByteBuffer()
//line views/connection.html:86
	WriteModifyConnection(qb422016, conn, rdms)
//line views/connection.html:86
	qs422016 := string(qb422016.B)
//line views/connection.html:86
	qt422016.ReleaseByteBuffer(qb422016)
//line views/connection.html:86
	return qs422016
//line views/connection.html:86
}

//line views/connection.html:90
func StreamNewConnection(qw422016 *qt422016.Writer, rdms []db.Rdm) {
//line views/connection.html:90
	qw422016.N().S(`
`)
//line views/connection.html:92
	conn := db.Connection{}

//line views/connection.html:93
	qw422016.N().S(`
<div class="w-1/4">
    `)
//line views/connection.html:95
	qw422016.N().S(connectionCard(conn, rdms, newConnectionActions()))
//line views/connection.html:95
	qw422016.N().S(`
</div>
`)
//line views/connection.html:97
}

//line views/connection.html:97
func WriteNewConnection(qq422016 qtio422016.Writer, rdms []db.Rdm) {
//line views/connection.html:97
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/connection.html:97
	StreamNewConnection(qw422016, rdms)
//line views/connection.html:97
	qt422016.ReleaseWriter(qw422016)
//line views/connection.html:97
}

//line views/connection.html:97
func NewConnection(rdms []db.Rdm) string {
//line views/connection.html:97
	qb422016 := qt422016.AcquireByteBuffer()
//line views/connection.html:97
	WriteNewConnection(qb422016, rdms)
//line views/connection.html:97
	qs422016 := string(qb422016.B)
//line views/connection.html:97
	qt422016.ReleaseByteBuffer(qb422016)
//line views/connection.html:97
	return qs422016
//line views/connection.html:97
}

//line views/connection.html:101
func StreamConnectionBody(qw422016 *qt422016.Writer, conns []db.Connection, rdms []db.Rdm) {
//line views/connection.html:101
	qw422016.N().S(`
<div class="grid grid-cols-4" id="connection-list">
    `)
//line views/connection.html:103
	for _, conn := range conns {
//line views/connection.html:103
		qw422016.N().S(`
    `)
//line views/connection.html:104
		qw422016.N().S(ModifyConnection(conn, rdms))
//line views/connection.html:104
		qw422016.N().S(`
    `)
//line views/connection.html:105
	}
//line views/connection.html:105
	qw422016.N().S(`
</div>
<div class="flex justify-evenly">
    `)
//line views/connection.html:108
	qw422016.N().S(NewConnection(rdms))
//line views/connection.html:108
	qw422016.N().S(`
</div>
`)
//line views/connection.html:110
}

//line views/connection.html:110
func WriteConnectionBody(qq422016 qtio422016.Writer, conns []db.Connection, rdms []db.Rdm) {
//line views/connection.html:110
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/connection.html:110
	StreamConnectionBody(qw422016, conns, rdms)
//line views/connection.html:110
	qt422016.ReleaseWriter(qw422016)
//line views/connection.html:110
}

//line views/connection.html:110
func ConnectionBody(conns []db.Connection, rdms []db.Rdm) string {
//line views/connection.html:110
	qb422016 := qt422016.AcquireByteBuffer()
//line views/connection.html:110
	WriteConnectionBody(qb422016, conns, rdms)
//line views/connection.html:110
	qs422016 := string(qb422016.B)
//line views/connection.html:110
	qt422016.ReleaseByteBuffer(qb422016)
//line views/connection.html:110
	return qs422016
//line views/connection.html:110
}
