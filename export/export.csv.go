// Code generated by qtc from "export.csv". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line export/export.csv:1
package export

//line export/export.csv:1
import "github.com/Jiang-Gianni/gosqlx/rdms"

//line export/export.csv:2
import "strings"

//line export/export.csv:4
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line export/export.csv:4
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line export/export.csv:4
func StreamExportCsv(qw422016 *qt422016.Writer, qr *rdms.QueryResults) {
//line export/export.csv:4
	qw422016.E().S(strings.Join(qr.Columns, ", "))
//line export/export.csv:4
	qw422016.N().S(`,`)
//line export/export.csv:4
	for _, row := range qr.Rows {
//line export/export.csv:4
		qw422016.N().S(`
`)
//line export/export.csv:5
		qw422016.N().S(strings.Join(row, "', '"))
//line export/export.csv:5
		qw422016.N().S(`,`)
//line export/export.csv:5
	}
//line export/export.csv:5
	qw422016.N().S(`
`)
//line export/export.csv:6
}

//line export/export.csv:6
func WriteExportCsv(qq422016 qtio422016.Writer, qr *rdms.QueryResults) {
//line export/export.csv:6
	qw422016 := qt422016.AcquireWriter(qq422016)
//line export/export.csv:6
	StreamExportCsv(qw422016, qr)
//line export/export.csv:6
	qt422016.ReleaseWriter(qw422016)
//line export/export.csv:6
}

//line export/export.csv:6
func ExportCsv(qr *rdms.QueryResults) string {
//line export/export.csv:6
	qb422016 := qt422016.AcquireByteBuffer()
//line export/export.csv:6
	WriteExportCsv(qb422016, qr)
//line export/export.csv:6
	qs422016 := string(qb422016.B)
//line export/export.csv:6
	qt422016.ReleaseByteBuffer(qb422016)
//line export/export.csv:6
	return qs422016
//line export/export.csv:6
}
